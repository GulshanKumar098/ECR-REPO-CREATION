
name: ECR Deploy test
on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'The application deployment environment'
        default: 'devl'
        required: true
        type: choice
        options:
         - devl
         - prod

jobs:
  Deploy:
    runs-on: ubuntu-latest

    
    steps:
     
    - name: Checkout
      uses: actions/checkout@v2
      

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
       aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
       aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
       aws-region: us-east-1

        

    - name: "Set environment variables for devl environment"
      if: ${{ github.event.inputs.environment == 'devl' }}
      run: |
        echo "ENVIRONMENT=devl" >> $GITHUB_ENV
        echo "AWS_ACCT=600831013510" >> $GITHUB_ENV

    - name: "Set environment variables for prod environment"
      if: ${{ github.event.inputs.environment == 'prod' }}
      run: |
        echo "ENVIRONMENT=prod" >> $GITHUB_ENV
        echo "AWS_ACCT=188549407646" >> $GITHUB_ENV

    - name: run-ecr 
      #run: aws cloudformation deploy --stack-name dq-ECR-stack --template-file devl-aws-infra-ecr.yml  --tags Name=dq-ecr-stack --region us-east-1
      run: |
       aws cloudformation deploy --stack-name dq-ecr-stack-${{ env.ENVIRONMENT }} --template-file ${{ env.ENVIRONMENT }}-aws-infra-ecr.yml  --tags Name=dq-ecr-stack-${{ env.ENVIRONMENT }} component=ae-collibra-dq  --region us-east-1  
       reponame=`aws ecr describe-repositories --query "repositories[].repositoryName" --output text`


    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tags, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: $reponame  #${{steps.run-ecr.outputs.URI}}
        IMAGE_TAG: ${{ github.sha }}
      run: |
         docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
         docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG


