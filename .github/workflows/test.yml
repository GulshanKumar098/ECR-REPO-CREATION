


name: ECR Deploy test
on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'The application deployment environment'
        default: 'devl'
        required: true
        type: choice
        options:
         - devl
         - prod


jobs:
 Deploy:
  runs-on: ubuntu-latest

  env:
    AWS_SHARED_CREDENTIALS_FILE: "${{ github.workspace }}/credentials"

    steps:
      - name: Checkout Latest Source Code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: "Set environment variables for devl environment"
        if: ${{ github.event.inputs.environment == 'devl' }}
        run: |
         echo "ENVIRONMENT=devl" >> $GITHUB_ENV
         echo "AWS_ACCT=600831013510" >> $GITHUB_ENV

      - name: "Set environment variables for prod environment"
        if: ${{ github.event.inputs.environment == 'prod' }}
        run: |
         echo "ENVIRONMENT=prod" >> $GITHUB_ENV
         echo "AWS_ACCT=188549407646" >> $GITHUB_ENV

      - name: run-ecr 
        run: aws cloudformation deploy --stack-name dq-ECR-stack --template-file devl-aws-infra-ecr.yml  --tags Name=dq-ecr-stack --region us-east-1
        
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: collibradq-ecr-registry-repo ##${{steps.run-ecr.outputs.repositoryName}} 
        IMAGE_TAG: ${{ github.sha }}
        run: |
         docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
         docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG


